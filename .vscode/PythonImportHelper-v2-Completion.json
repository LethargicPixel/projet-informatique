[
    {
        "label": "reverse",
        "importPath": "audioop",
        "description": "audioop",
        "isExtraImport": true,
        "detail": "audioop",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "system",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "search",
        "importPath": "re",
        "description": "re",
        "isExtraImport": true,
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "perf_counter",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "Type",
        "kind": 6,
        "importPath": "nonogramm",
        "description": "nonogramm",
        "peekOfCode": "class Type:\n    colonne=\"colonne\"\n    ligne=\"ligne\"\nclass Case:\n    vrai=\"|\"\n    faux=\"O\"\n    def __init__(self, valeur=None):\n        self._valeur=valeur\n    def __str__(self):\n        match self._valeur:",
        "detail": "nonogramm",
        "documentation": {}
    },
    {
        "label": "Case",
        "kind": 6,
        "importPath": "nonogramm",
        "description": "nonogramm",
        "peekOfCode": "class Case:\n    vrai=\"|\"\n    faux=\"O\"\n    def __init__(self, valeur=None):\n        self._valeur=valeur\n    def __str__(self):\n        match self._valeur:\n            case True :\n                return Case.vrai\n            case False:",
        "detail": "nonogramm",
        "documentation": {}
    },
    {
        "label": "Grille",
        "kind": 6,
        "importPath": "nonogramm",
        "description": "nonogramm",
        "peekOfCode": "class Grille:\n    def __init__(self) -> None:\n        self.lignes=[[]]\n        self.colonnes=[[]]\n        self.tailleLigne=0\n        self.tailleColonne=0\n        self._position={}\n        self._positionModifiable={}\n        self.grille={}\n    def copie(self):",
        "detail": "nonogramm",
        "documentation": {}
    }
]