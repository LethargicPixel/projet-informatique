[
    {
        "label": "copy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "copy",
        "description": "copy",
        "detail": "copy",
        "documentation": {}
    },
    {
        "label": "product",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "Type",
        "kind": 6,
        "importPath": "nonogramm",
        "description": "nonogramm",
        "peekOfCode": "class Type:\n    colonne = \"colonne\"\n    ligne = \"ligne\"\nclass Case:\n    vrai = \"■\"\n    faux = \"X\"\n    def __init__(self, valeur=None):\n        self._valeur = valeur\n    def __str__(self):\n        match self._valeur:",
        "detail": "nonogramm",
        "documentation": {}
    },
    {
        "label": "Case",
        "kind": 6,
        "importPath": "nonogramm",
        "description": "nonogramm",
        "peekOfCode": "class Case:\n    vrai = \"■\"\n    faux = \"X\"\n    def __init__(self, valeur=None):\n        self._valeur = valeur\n    def __str__(self):\n        match self._valeur:\n            case True:\n                return Case.vrai\n            case False:",
        "detail": "nonogramm",
        "documentation": {}
    },
    {
        "label": "Grille",
        "kind": 6,
        "importPath": "nonogramm",
        "description": "nonogramm",
        "peekOfCode": "class Grille:\n    def __init__(self) -> None:\n        self.lignes: list[list[Case]] = [[]]\n        self.colonnes: list[list[Case]] = [[]]\n        self.tailleLigne: int = 0\n        self.tailleColonne: int = 0\n        self._position: dict[str:list[int]] = {\n            Type.colonne: {}, Type.ligne: {}}\n        self._positionModifiable: dict[str:list[int]] = {\n            Type.colonne: {}, Type.ligne: {}}",
        "detail": "nonogramm",
        "documentation": {}
    },
    {
        "label": "a",
        "kind": 2,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "def a(b):\n    if b==3:\n        c=[1,2,3]\n    if b==0:\n        return\n    print(c)\n    c=c[:-1]\n    return a(b-1)\na(3)",
        "detail": "test",
        "documentation": {}
    }
]